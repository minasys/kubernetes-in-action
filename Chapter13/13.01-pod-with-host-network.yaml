# A pod using the node’s network namespace

# Certain pods (usually system pods) need to operate in the host’s default namespaces,
#allowing them to see and manipulate node-level resources and devices. For example, a
#pod may need to use the node’s network adapters instead of its own virtual network
#adapters. This can be achieved by setting the hostNetwork property in the pod spec
#to true.
#In that case, the pod gets to use the node’s network interfaces instead of having its
#own set, as shown in figure 13.1. This means the pod doesn’t get its own IP address and
#if it runs a process that binds to a port, the process will be bound to the node’s port.


apiVersion: v1
kind: Pod
metadata:
  name: pod-with-host-network
spec:
  # Using the host node’s network namespace
  hostNetwork: true
  containers:
  - name: main
    image: alpine
    command: ["/bin/sleep", "999999"]


# After you run the pod, you can use the following command to see that it’s indeed using
#the host’s network namespace (it sees all the host’s network adapters, for example).
# $ kubectl exec pod-with-host-network ifconfig
